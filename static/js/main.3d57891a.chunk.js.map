{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","Navbar","role","to","isActive","cn","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","loadPeople","peopleFromServer","preparedPeople","find","mom","dad","useEffect","length","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3d57891a.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { FC } from 'react';\nimport cn from 'classnames';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"people\"\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({ 'has-background-warning': person.slug === slug })}\n          >\n\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  memo,\n  useState,\n} from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const loadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const preparedPeople = peopleFromServer.map(person => {\n        const mother = peopleFromServer.find(mom => (\n          mom.name === person.motherName\n        ));\n        const father = peopleFromServer.find(dad => (\n          dad.name === person.fatherName\n        ));\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(preparedPeople);\n    } catch (e) {\n      setError('Unable dowload data from server');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title people-title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && (\n            people.length\n              ? <PeopleTable people={people} />\n              : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { FC } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<App />} />\n            <Route index element={<HomePage />} />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}